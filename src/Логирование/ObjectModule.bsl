
#Область ПрограммныйИнтерфейс

#Область УстановкаНастроек

// Инициализирует объект логирования с указанными настройками.
// Параметры
//     ИмяСобытия         - Строка - имя события/лога.
//     СпособыЛогирования - Массив, Неопределено - список способов логирования (способ описывается структурой), если не задано используется логирование в ЖР.
Процедура Инициализировать(ИмяСобытия="Логирование")
	
	//TODO (Цымбал): возможность настройки уровня логирования.
	//TODO (Цымбал): возможность отключения логирования.
	//TODO (Цымбал): возможность установки шаблона лога.
	//TODO (Цымбал): поля шаблона лога.
	//TODO (Цымбал): возможность установки формата даты для лога.
	//TODO (Цымбал): реализовать возможность привязывать лог в ЖР к метаданным и объекту.
	
	ЭтотОбъект.СпособыЛогирования = Новый Массив;
	ЭтотОбъект.Событие            = ИмяСобытия;
		
КонецПроцедуры

Функция ПолучитьЛог(ИмяСобытия) Экспорт
	Инициализировать(ИмяСобытия);
	Возврат ЭтотОбъект;
КонецФункции

// Формирует структуру с описанием способа логирования
// Параметры
//     СпособВывода          - Строка - название способа вывода: ЖурналРегистрации, Консоль/Сообщения, Файл.
//     УровеньЛогирования    - Строка - пока не используется.
//     ПутьКФайлуЛогирования - Строка - пока не используется.
// 
// Возвращаемое значение:
//     Структура - структура с описанием способа логирования, в которой есть следующие поля:
//       * Имя      - Строка - имя способа логирования.
//       * Уровень  - Строка - имя уровня логирования.
//       * ИмяФайла - Строка - имя файла лога, для способа логирования Файл.
Функция ПолучитьОписаниеСпособаЛогирования(Знач СпособЛогирования, Знач УровеньЛогирования=Неопределено, Знач ПутьКФайлуЛогирования="") Экспорт
	
	Возврат Новый Структура("Имя, Уровень, ИмяФайла", СпособЛогирования, УровеньЛогирования, ПутьКФайлуЛогирования);
	
КонецФункции

Процедура ДобавитьСпособЛогированияЖурналРегистрации() Экспорт
	
	// Проверить наличие способа логирования.
	Для Каждого СпособЛогирования Из ЭтотОбъект.СпособыЛогирования Цикл
		Если СпособЛогирования.Имя = "ЖурналРегистрации" Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Добавление способа логирования.
	ОписаниеСпособаЛогирования = ПолучитьОписаниеСпособаЛогирования("ЖурналРегистрации");
	ЭтотОбъект.СпособыЛогирования.Добавить(ОписаниеСпособаЛогирования);
	
КонецПроцедуры

Процедура УстановитьСобытие(СобытиеЛогирования) Экспорт
	ЭтотОбъект.Событие = СобытиеЛогирования;
КонецПроцедуры

#КонецОбласти

#Область ОсновныеМетоды

Процедура Отладка(Знач Сообщение) Экспорт
	
КонецПроцедуры

Процедура Информация(Знач Сообщение) Экспорт
	
	Если Ложь Тогда
		 
	Иначе
		ВызватьИсключение СтрШаблон("Установлен неизвестный способ логирования: %1", ЭтотОбъект.СпособыЛогирования);
	КонецЕсли;
	
КонецПроцедуры

Процедура Инфо(Знач Сообщение)  Экспорт
	ЭтотОбъект.Информация(Сообщение);
КонецПроцедуры

Процедура Предупреждение_(Знач Сообщение) Экспорт
	
КонецПроцедуры

Процедура Предупредить(Знач Сообщение) Экспорт
	Предупреждение_(Сообщение);
КонецПроцедуры

Процедура Ошибка(Знач Сообщение) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаписьВЖурналРегистрации

Процедура ОтладкаЖурналРегистрации(Знач Сообщение)
	ЗаписатьВЖурналРегистрации(Сообщение, УровеньЖурналаРегистрации.Информация);
КонецПроцедуры

Процедура ИнформацияЖурналРегистрации(Знач Сообщение)
	ЗаписатьВЖурналРегистрации(Сообщение, УровеньЖурналаРегистрации.Информация);
КонецПроцедуры

Процедура ПредупреждениеЖурналРегистрации(Знач Сообщение)
	ЗаписатьВЖурналРегистрации(Сообщение, УровеньЖурналаРегистрации.Предупреждение);
КонецПроцедуры

Процедура ОшибкаЖурналРегистрации(Знач Сообщение)
	ЗаписатьВЖурналРегистрации(Сообщение, УровеньЖурналаРегистрации.Ошибка);
КонецПроцедуры

Процедура ЗаписатьВЖурналРегистрации(Знач Сообщение, Знач УровеньЖР=Неопределено)
	
	УровеньЖР = ?(УровеньЖР = Неопределено, УровеньЖурналаРегистрации.Информация, УровеньЖР);
	
	ЗаписьЖурналаРегистрации(ЭтотОбъект.Событие, УровеньЖР, , , Сообщение);
	
	//Если ЗначениеЗаполнено(ОбъектМетаданныхЖР) Тогда
	//	ЗаписьЖурналаРегистрации(ЭтотОбъект.Событие, УровеньЖР, ОбъектМетаданныхЖР, ДанныеЖР, Сообщение);
	//Иначе
	//	
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаписьВКонсоль

#КонецОбласти

#Область ЗаписьВФайл



#КонецОбласти

#Область ЗаписьВРегистр

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

Функция Инициализирован()
	Возврат Инициализирован;
КонецФункции

Функция СформироватьСообщениеПоШаблону(Знач Сообщение, Знач Уровень, Знач ДатаСообщения) 
	
	
	
	
КонецФункции

Функция ШаблонСообщенияПоУмолчанию()
	Возврат "%ДАТА% - %УРОВЕНЬ% - %СООБЩЕНИЕ%";
КонецФункции

Функция ФорматДатыПоУмолчанию()
	Возврат "ДФ='dd.MM.yyyy HH:mm:ss'";
КонецФункции


#КонецОбласти